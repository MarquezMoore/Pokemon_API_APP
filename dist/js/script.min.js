let pokemonRepository=function(){let searchInput=document.querySelector(".search"),pokeAPI="https://pokeapi.co/api/v2/pokemon/?limit=100",pokemonList=[];function loadItems(){return showLoadingMessage(),fetch(pokeAPI).then((function(response){return response.json()})).then((function(responseJSON){let items;responseJSON.results.forEach((function(item){let pokemon;add({name:item.name[0].toUpperCase()+item.name.slice(1),detailsURL:item.url})})),hideLoadingMessage()})).catch((function(error){console.log(`Fetch failed: ${error}`)}))}function loadDetails(currentPokemon){showLoadingMessage();let url=currentPokemon.detailsURL;return fetch(url).then((function(response){return response.json()})).then((function(details){currentPokemon.height=details.height,currentPokemon.image=details.sprites.other.dream_world.front_default,currentPokemon.types=details.types,hideLoadingMessage()})).catch((function(error){console.log(`Fetch failed: ${error}`)}))}function showLoadingMessage(){console.log("Loading...")}function hideLoadingMessage(){console.log("Done!")}function add(pokemon){pokemonList.push(pokemon)}function getAll(){return pokemonList}function addListItem(pokemon){let pokeList=document.querySelector(".pokemon-list"),listItem=document.createElement("li");listItem.classList.add("pokemon"),listItem.classList.add("col-12"),listItem.classList.add("col-md-4");let button=document.createElement("button");button.classList.add("btn"),button.classList.add("btn-light"),button.setAttribute("data-bs-toggle","modal"),button.setAttribute("data-bs-target","#pokemonModal"),button.innerText=pokemon.name,listItem.appendChild(button),pokeList.appendChild(listItem),addClickEvent(button,pokemon)}function addClickEvent(button,pokemon){button.addEventListener("click",(function(){showDetails(pokemon)}))}function constructDetailModal(pokeName,pokeHeight,pokeImage,pokeType){return new Promise((function(resolve,reject){let modalBody,modalFooter,modalImage;modalTitle=document.querySelector(".modal-title"),modalBody=document.querySelector(".modal-body"),modalFooter=document.querySelector(".modal-footer"),modalImage=document.createElement("img"),modalImage.classList.add("modal-image"),modalBody.innerHTML="",modalTitle.innerText=pokeName,modalImage.setAttribute("src",pokeImage),modalImage.setAttribute("width","200px"),modalImage.setAttribute("alt",`this is a picture of ${pokeName}`),modalCopy=document.createElement("p"),modalCopy.innerText=`${pokeName} is ${pokeHeight} meter(s) tall with type(s) of ${pokeType}!`,modalBody.append(modalImage),modalBody.append(modalCopy),resolve("Completed successfully!"),reject("Unable to complete task...")}))}function showDetails(pokemon){loadDetails(pokemon).then((function(){let pokeName,pokeHeight,pokeImage,pokeType;constructDetailModal(pokemon.name,pokemon.height,pokemon.image,getPokemonTypes(pokemon)).then((function(result){console.log(result)})).catch((function(result){console.log(result)}))}))}function getPokemonTypes(pokemon){let unparsedTypeList=pokemon.types,parsedTypeList=[],pokeTypeString;for(let i=0;i<unparsedTypeList.length;i++){let currentItem,currentType=unparsedTypeList[i].type.name;parsedTypeList.push(currentType)}return pokeTypeString=parsedTypeList.toString().replace(","," and "),pokeTypeString}return searchInput.addEventListener("input",(function(){let allPokemon=document.querySelectorAll(".pokemon"),filterValue=searchInput.value.toUpperCase();allPokemon.forEach((function(item){console.log(item.innerText),item.innerText.toUpperCase().indexOf(filterValue)>-1?item.style.display="":item.style.display="none"}))})),{add:add,getAll:getAll,addListItem:addListItem,showDetails:showDetails,loadItems:loadItems,loadDeails:loadDetails}}();pokemonRepository.loadItems().then((function(pokemonList){pokemonRepository.getAll().forEach((function(pokemon){pokemonRepository.addListItem(pokemon)}))}));